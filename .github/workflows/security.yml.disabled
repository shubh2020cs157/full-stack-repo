name: 🛡️ Security & Dependency Scanning

on:
  schedule:
    - cron: "0 2 * * 1" # Weekly on Monday at 2 AM
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: "18"

jobs:
  # 🔍 Dependency Vulnerability Scanning
  dependency-scan:
    name: 🔍 Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          [
            portfolio-builder,
            forum-crud,
            oauth-nextjs,
            performance-optimization,
          ]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        working-directory: ${{ matrix.project }}
        run: npm ci

      - name: 🔍 Run npm audit
        working-directory: ${{ matrix.project }}
        run: |
          npm audit --audit-level=moderate --json > audit-results.json || true
          npm audit --audit-level=moderate

      - name: 📤 Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: audit-results-${{ matrix.project }}
          path: ${{ matrix.project }}/audit-results.json
          retention-days: 30

  # 🔒 Snyk Security Scanning
  snyk-scan:
    name: 🔒 Snyk Security Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          [
            portfolio-builder,
            forum-crud,
            oauth-nextjs,
            performance-optimization,
          ]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        working-directory: ${{ matrix.project }}
        run: npm ci

      - name: 🔒 Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --file=package.json

      - name: 📊 Upload Snyk results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ${{ matrix.project }}/snyk.sarif

  # 🔍 Secret Scanning
  secret-scan:
    name: 🔍 Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  # 🛡️ Container Security Scanning
  container-scan:
    name: 🛡️ Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    strategy:
      matrix:
        project: [forum-crud, performance-optimization]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Build Docker image
        run: |
          cd ${{ matrix.project }}
          docker build -t ${{ matrix.project }}:latest .

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ matrix.project }}:latest"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: 📊 Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  # 🔐 License Compliance Check
  license-check:
    name: 🔐 License Compliance Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          [
            portfolio-builder,
            forum-crud,
            oauth-nextjs,
            performance-optimization,
          ]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        working-directory: ${{ matrix.project }}
        run: npm ci

      - name: 🔐 Check licenses
        working-directory: ${{ matrix.project }}
        run: |
          npx license-checker --summary
          npx license-checker --excludePrivatePackages --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;Unlicense'

  # 📊 Security Report
  security-report:
    name: 📊 Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, snyk-scan, secret-scan, license-check]
    if: always()
    steps:
      - name: 📊 Generate Security Report
        run: |
          echo "## 🛡️ Security Scan Report" >> $GITHUB_STEP_SUMMARY
          echo "| Project | Dependency Scan | Snyk Scan | Secret Scan | License Check |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|----------------|-----------|-------------|---------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Portfolio Builder | ${{ needs.dependency-scan.result }} | ${{ needs.snyk-scan.result }} | ${{ needs.secret-scan.result }} | ${{ needs.license-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Forum CRUD | ${{ needs.dependency-scan.result }} | ${{ needs.snyk-scan.result }} | ${{ needs.secret-scan.result }} | ${{ needs.license-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| OAuth Next.js | ${{ needs.dependency-scan.result }} | ${{ needs.snyk-scan.result }} | ${{ needs.secret-scan.result }} | ${{ needs.license-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance Optimization | ${{ needs.dependency-scan.result }} | ${{ needs.snyk-scan.result }} | ${{ needs.secret-scan.result }} | ${{ needs.license-check.result }} |" >> $GITHUB_STEP_SUMMARY
