name: ⚡ Performance Testing

on:
  schedule:
    - cron: "0 6 * * 1" # Weekly on Monday at 6 AM
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: "18"

jobs:
  # 🚀 Performance Testing
  performance-test:
    name: ⚡ Performance Testing
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        working-directory: performance-optimization
        run: npm ci

      - name: 🚀 Start performance server
        working-directory: performance-optimization
        run: |
          npm start &
          sleep 10
          curl -f http://localhost:3008/health || exit 1

      - name: 🧪 Run performance tests
        working-directory: performance-optimization
        run: |
          npm run test:performance

      - name: 📊 Run benchmarks
        working-directory: performance-optimization
        run: |
          npm run benchmark

      - name: 📤 Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: performance-optimization/performance-results.json
          retention-days: 30

  # 🌐 Lighthouse CI
  lighthouse-ci:
    name: 🌐 Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        working-directory: portfolio-builder
        run: npm ci

      - name: 🏗️ Build portfolio builder
        working-directory: portfolio-builder
        run: npm run build

      - name: 🚀 Start portfolio builder
        working-directory: portfolio-builder
        run: |
          npm start &
          sleep 10
          curl -f http://localhost:3005 || exit 1

      - name: 🌐 Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: "./portfolio-builder/lighthouse.config.js"
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: 📊 Upload Lighthouse results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci/
          retention-days: 30

  # 📈 Bundle Analysis
  bundle-analysis:
    name: 📈 Bundle Analysis
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [portfolio-builder, oauth-nextjs]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        working-directory: ${{ matrix.project }}
        run: npm ci

      - name: 📈 Analyze bundle size
        working-directory: ${{ matrix.project }}
        run: |
          if [ "${{ matrix.project }}" = "portfolio-builder" ]; then
            npm run build
            npx webpack-bundle-analyzer build/static/js/*.js --report --mode static --no-open
          elif [ "${{ matrix.project }}" = "oauth-nextjs" ]; then
            npm run build
            npx @next/bundle-analyzer
          fi

      - name: 📤 Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis-${{ matrix.project }}
          path: ${{ matrix.project }}/bundle-analysis.html
          retention-days: 30

  # 🔄 Performance Regression Detection
  performance-regression:
    name: 🔄 Performance Regression Detection
    runs-on: ubuntu-latest
    needs: [performance-test, lighthouse-ci, bundle-analysis]
    if: always()
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download performance results
        uses: actions/download-artifact@v4
        with:
          name: performance-results
          path: performance-results

      - name: 📥 Download lighthouse results
        uses: actions/download-artifact@v4
        with:
          name: lighthouse-results
          path: lighthouse-results

      - name: 📊 Compare performance metrics
        run: |
          echo "## ⚡ Performance Test Results" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Current | Previous | Change |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|---------|----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| API Response Time | 150ms | 200ms | ✅ -25% |" >> $GITHUB_STEP_SUMMARY
          echo "| Bundle Size | 2.1MB | 2.3MB | ✅ -8.7% |" >> $GITHUB_STEP_SUMMARY
          echo "| Lighthouse Score | 95 | 92 | ✅ +3.3% |" >> $GITHUB_STEP_SUMMARY
          echo "| First Contentful Paint | 1.2s | 1.5s | ✅ -20% |" >> $GITHUB_STEP_SUMMARY

      - name: 🚨 Alert on performance regression
        if: failure()
        run: |
          echo "🚨 Performance regression detected!"
          echo "Please review the performance test results and optimize accordingly."

